openapi: 3.0.1
info:
  title: 'YB.Todo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
  version: '1.0'
paths:
  /Todo:
    get:
      tags:
        - Todo
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToDoItem'
    post:
      tags:
        - Todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToDoItem'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItemResult'
    put:
      tags:
        - Todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateToDoItem'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItemResult'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebErrorResult'
  /Todo/GetFiltered:
    get:
      tags:
        - Todo
      parameters:
        - name: Id.Min
          in: query
          schema:
            type: integer
            format: int32
        - name: Id.Max
          in: query
          schema:
            type: integer
            format: int32
        - name: Description
          in: query
          schema:
            type: string
        - name: IsComplete
          in: query
          schema:
            type: boolean
        - name: CreatedOnUtc.Min
          in: query
          schema:
            type: string
            format: date-time
        - name: CreatedOnUtc.Max
          in: query
          schema:
            type: string
            format: date-time
        - name: LastModifiedOnUtc.Min
          in: query
          schema:
            type: string
            format: date-time
        - name: LastModifiedOnUtc.Max
          in: query
          schema:
            type: string
            format: date-time
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PerPage
          in: query
          schema:
            type: integer
            format: int32
        - name: SortBy
          in: query
          schema:
            $ref: '#/components/schemas/Sorting'
        - name: Sort
          in: query
          schema:
            type: string
        - name: CombineWith
          in: query
          schema:
            $ref: '#/components/schemas/CombineType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToDoItem'
  '/Todo/{id}':
    get:
      tags:
        - Todo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDoItem'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebErrorResult'
    delete:
      tags:
        - Todo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItemResult'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebErrorResult'
components:
  schemas:
    AddToDoItem:
      required:
        - description
        - isComplete
      type: object
      properties:
        description:
          maxLength: 250
          type: string
        isComplete:
          type: boolean
      additionalProperties: false
    CombineType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    Sorting:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    ToDoItem:
      required:
        - createdOnUtc
        - description
        - id
        - isComplete
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          maxLength: 250
          type: string
        isComplete:
          type: boolean
        createdOnUtc:
          type: string
          format: date-time
        lastModifiedOnUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    TodoItemResult:
      type: object
      properties:
        id:
          type: integer
          format: int32
      additionalProperties: false
    UpdateToDoItem:
      required:
        - description
        - id
        - isComplete
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          maxLength: 250
          type: string
        isComplete:
          type: boolean
      additionalProperties: false
    WebError:
      type: object
      properties:
        errorCode:
          type: integer
          format: int32
        header:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    WebErrorResult:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/WebError'
          nullable: true
      additionalProperties: false